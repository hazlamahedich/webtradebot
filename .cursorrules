# iDocument Project Intelligence

## Authentication Implementation
- NextAuth v5 integrated with GitHub OAuth is the primary authentication method
- Authentication configuration is centralized in `lib/auth.ts`
- Session management uses JWT tokens stored in HTTP-only cookies
- Protected routes use middleware to check authentication in `middleware.ts`
- Client components access auth state via `useSession()` hook from next-auth/react
- Authentication error handling uses a dedicated error page
- User IDs from GitHub (not UUID) should be used as consistent identifiers
- Potential issue with two user records: one with UUID, one with GitHub ID

## Project Structure
- Using Next.js App Router for routing
- Feature-based organization pattern
- Leveraging React Server Components where possible
- Client components used for interactive elements

## Code Style
- TypeScript with strict type safety
- Functional component approach
- Server Actions for form submissions
- Tailwind CSS for styling with shadcn/ui components

## Database Pattern
- Supabase for data storage
- Real-time subscriptions for collaborative features
- Relational schema for users, repositories, and reviews

## AI Processing
- LangChain for OpenAI integration
- LangGraph for workflow orchestration
- Structured prompting for code analysis
- Context management for token optimization

## GitHub Integration
- OAuth App for authentication
- Webhooks for PR events
- API calls for repository data

## Component Organization
- /app: Main application routes
- /components: Reusable UI components
- /lib: Utility functions and types
- /hooks: Custom React hooks
- /services: External service integration

## User Preferences
- Clean, minimal UI
- Dark mode by default with light mode toggle
- Focus on code readability in reviews
- Actionable suggestions with inline context

## Common Issues in Authentication
- "No GitHub account connected" error occurs when the account record is missing
- This can be fixed by using the diagnostic tool in the Connect Repository form
- Or by logging out and logging back in with the updated auth system
- Two user records with the same GitHub information can cause connection issues
- Repositories may be associated with the wrong user ID (UUID vs GitHub ID)

# GitHub Authentication System

- NextAuth.js is used for GitHub OAuth integration
- GitHub user ID (not UUID) is the consistent identifier for users
- Two table architecture: users for profiles, accounts for OAuth data
- auth.ts contains all authentication logic and token management
- Session includes GitHub access token for API operations
- Authentication errors are diagnosed with /api/debug/auth endpoint
- Account connection issues are fixed with /api/fix-github-account endpoint

# GitHub Repository Connection

- Repositories are connected via full name (username/repository)
- Repository data is stored in the repositories table with user ID association
- Repository lookup is case-insensitive to prevent duplicates
- GitHub API calls require the user's OAuth token from accounts table
- Repository connection diagnostics in Connect Repository form
- Repository user association can be fixed with Fix Repositories page

## AI Component Testing Pattern
- AI tests should be isolated using Jest's isolateModules when dealing with imports
- External dependencies (OpenAI, GitHub, Database) should always be mocked
- Virtual mocks with { virtual: true } should be used for modules with duplicate declarations
- Tests should be organized by component functionality
- Central mock modules should be placed in the __mocks__ directory
- The jest.config.js moduleNameMapper redirects problematic imports
- Package.json contains specialized test scripts for running specific test suites
- The GitHub Actions workflow in .github/workflows/test-documentation.yml runs all tests

## Known Issues in Testing
- The documentation-generator.test.ts has LangGraph dependency issues
- Some mock TypeScript types cause linter errors that can be ignored
- The code-review.ts file has duplicate declarations requiring special mocking
- When running tests, the test pattern should explicitly list files to include instead of using wildcards 